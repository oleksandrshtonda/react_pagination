{"version":3,"sources":["components/PageItem/PageItem.tsx","utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["PageItem","_ref","isActive","numberOfElem","onChangePage","total","_jsx","className","concat","children","href","onClick","getNumbers","from","to","numbers","n","push","Pagination","perPage","currentPage","pages","Math","ceil","lastPage","_Fragment","_jsxs","map","page","items","App","_useState","useState","_useState2","_slicedToArray","itemsPerPage","setItemsPerPage","_useState3","_useState4","setCurrentPage","lastItemOnPage","min","length","firstItemOnPage","pageItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8aa5c2be.chunk.js","sourcesContent":["export const PageItem: React.FC<{\n  isActive: boolean,\n  numberOfElem: number,\n  onChangePage: React.Dispatch<React.SetStateAction<number>>,\n  total: number,\n}> = ({\n  isActive,\n  numberOfElem,\n  onChangePage,\n  total,\n}) => (\n  <li className={`page-item ${isActive ? 'active' : ''}`}>\n    <a\n      data-cy=\"pageLink\"\n      className=\"page-link\"\n      href={`#${numberOfElem}`}\n      onClick={() => {\n        if (numberOfElem >= total) {\n          onChangePage(1);\n        } else {\n          onChangePage(numberOfElem);\n        }\n      }}\n    >\n      {`${numberOfElem}`}\n    </a>\n  </li>\n);\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import { IPagination } from '../../interfaces/IPagination';\nimport { PageItem } from '../PageItem';\nimport { getNumbers } from '../../utils';\n\nexport const Pagination: React.FC<IPagination> = ({\n  total,\n  perPage,\n  currentPage,\n  onChangePage,\n}) => {\n  const pages = getNumbers(1, Math.ceil(total / perPage));\n  const lastPage = Math.ceil(total / perPage);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={`page-item ${currentPage === 1 && 'disabled'}`}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => {\n              if (currentPage !== 1) {\n                onChangePage(currentPage - 1);\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n        {pages.map(page => {\n          return (\n            <PageItem\n              key={page}\n              isActive={currentPage === page}\n              numberOfElem={page}\n              onChangePage={onChangePage}\n              total={total}\n            />\n          );\n        })}\n        <li className={`page-item ${currentPage === lastPage && 'disabled'}`}>\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === lastPage}\n            onClick={() => {\n              if (currentPage !== lastPage) {\n                onChangePage(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState<number>(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const lastItemOnPage = Math.min(currentPage * itemsPerPage, items.length);\n  const firstItemOnPage = ((currentPage - 1) * itemsPerPage) + 1;\n  const pageItems = items.slice(firstItemOnPage - 1, lastItemOnPage);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemOnPage} - ${lastItemOnPage} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={event => setItemsPerPage(+event.target.value)}\n          >\n            <option value={3}>3</option>\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onChangePage={setCurrentPage}\n      />\n\n      <ul>\n        {pageItems.map((item) => {\n          return <li key={item} data-cy=\"item\">{item}</li>;\n        })}\n      </ul>\n    </div>\n\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}